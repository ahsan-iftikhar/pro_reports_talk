dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
View(final)
params <- list(branch = "fargo")
branch <- params$branch
statement <- glue::glue_sql("SELECT * from financials
WHERE branch == {branch}",
.con = db)
mydata <- DBI::dbGetQuery(conn = db,
statement = statement)
# wrangle data
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(2:7)
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
rownames(final) <- NULL
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup()
colnames(final)['date'] <- ""
cols <- colnames(final)
cols[1] <- ""
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
rownames(final) <- NULL
cols <- colnames(final)
cols[1] <- ""
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
rownames(final) <- NULL
cols <- colnames(final)
colnames(final) <- c("", cols[2:6])
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
params <- list(branch = "fargo")
branch <- params$branch
statement <- glue::glue_sql("SELECT * from financials
WHERE branch == {branch}",
.con = db)
mydata <- DBI::dbGetQuery(conn = db,
statement = statement)
# wrangle data
right_now <- paste0(this_year, "-", this_month)
final <- mydata %>%
dplyr::arrange(desc(date)) %>%
dplyr::filter(date <= right_now) %>%
dplyr::group_by(date) %>%
dplyr::rename('Branch' = branch,
'Loans & Leases' = loans_leases,
'Debt Securities' = debt_sec,
'Other Interest Income' = other_int_income,
'Deposits' = deposits,
'Long-term Debt' = long_term_debt,
'Card Income' = card_income,
'Service Charges' = svc_charges,
'Personnel' = personnel,
'Occupancy' = occupancy,
'Marketing' = marketing) %>%
dplyr::mutate(`Total Interest Income` = `Loans & Leases` + `Debt Securities` + `Other Interest Income`,
`Total Interest Expense` = Deposits + `Long-term Debt`,
`Net Interest Income` = `Total Interest Income` - `Total Interest Expense`,
`Total Noninterest Income` = `Card Income` + `Service Charges`,
`Total Revenue, Net of Interest Income` = `Total Noninterest Income` + `Net Interest Income`,
`Total Noninterest Expense` = Personnel + Occupancy + Marketing,
`Net Income` = `Total Revenue, Net of Interest Income` - `Total Noninterest Expense`) %>%
dplyr::mutate_if(.predicate = is.numeric, scales::dollar) %>%
dplyr::select('Loans & Leases','Debt Securities', 'Other Interest Income', 'Total Interest Income',
'Deposits', 'Long-term Debt', 'Total Interest Expense', 'Net Interest Income',
'Card Income', 'Service Charges', 'Total Noninterest Income',
'Total Revenue, Net of Interest Income',
'Personnel', 'Occupancy', 'Marketing', 'Total Noninterest Expense',
'Net Income') %>%
data.table::transpose(keep.names = "Fields") %>%
dplyr::ungroup() %>%
janitor::row_to_names(1) %>%
dplyr::select(1:6)
rownames(final) <- NULL
cols <- colnames(final)
colnames(final) <- c("", cols[2:6])
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
source(here::here("R/setup.R"))
create_reports <- function(...) {
current <- tibble::tibble(...)
loc <- here::here("R/rmarkdown/report_master.Rmd")
rmarkdown::render(
input = loc,
output_file = paste0(current$branch, "_", this_year, "_", this_month ,".pdf"),
output_dir = paste0("finished_reports"),
intermediates_dir = "/finished_reports/tex",
clean = T,
params = list(branch = current$branch,
month = this_month,
year = this_year)
)
}
maybe_create_reports <- purrr::possibly(.f = create_reports, otherwise = NULL)
input_data %>%
purrr::pwalk(maybe_create_reports)
